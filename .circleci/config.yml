version: 2.1
jobs:
  build_notification:
    docker:
    - image: alpine:latest
      name: Alpine
    parameters:
      message:
        type: string
    steps:
      - run: >-
             apk add curl &&
             curl --data
             "chat_id=-1001171180529
             &text=`echo -e '\xE2\x8C\x9B'` << parameters.message >>&parse_mode=HTML"
             https://api.telegram.org/bot944044978:AAG4KbP4pU-jTdtEkrFA-33NhaRo_zR68RY/sendMessage
  push_docker_image:
    docker:
      - image: google/cloud-sdk
        name: GCP
    parameters:
      organization:
        type: string
      on_fail_message:
        type: string
      storage_buckets_key:
        type: string
      project_name:
        type: string
      project_id:
        type: string
      docker_password:
        type: string
      vue_app_api_url:
        type: string
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run: docker login -u "_json_key" -p "<< parameters.docker_password >>" https://asia.gcr.io
      - run: >-
             docker build
             --cache-from=<< parameters.organization >>/<< parameters.project_id >>/$CIRCLE_PROJECT_REPONAME
             -t << parameters.organization >>/<< parameters.project_id >>/$CIRCLE_PROJECT_REPONAME:latest
             .
      - run: docker push << parameters.organization >>/<< parameters.project_id >>/$CIRCLE_PROJECT_REPONAME:latest
      - run: >-
          docker run -d
          --name=$CIRCLE_PROJECT_REPONAME
          --env VUE_APP_API_URL=<< parameters.vue_app_api_url >>
          << parameters.organization >>/<< parameters.project_id >>/$CIRCLE_PROJECT_REPONAME:latest
          ping google.com
      - run: docker exec -it $CIRCLE_PROJECT_REPONAME npm run build
      - run: docker cp $CIRCLE_PROJECT_REPONAME:/usr/src/app/dist dist
      - run: gcloud config set project << parameters.project_id >>
      - run: echo << parameters.storage_buckets_key >> > storageBucketsBackendServiceKey.json
      - run: gcloud auth activate-service-account --key-file=storageBucketsBackendServiceKey.json
      - run: >-
          gsutil
          -h "Cache-Control:public,max-age=300"
          -m cp -Z -a public-read  -r
          dist/.
          gs://<< parameters.project_name >>-henley-sb/
      - run: >-
          gsutil -h "Cache-Control:private"
          -m cp -Z -a public-read -r
          dist/index.html
          gs://<< parameters.project_name >>-henley-sb/index.html
      - run:
          command: >-
                   docker run -it alpine:latest
                   apk add curl &&
                   curl --data
                   "chat_id=-1001171180529
                   &text=`echo -e '\xE2\x9D\x8C'` << parameters.on_fail_message >>&parse_mode=HTML"
                   https://api.telegram.org/bot944044978:AAG4KbP4pU-jTdtEkrFA-33NhaRo_zR68RY/sendMessage
          when: on_fail
  deploy_notification:
    docker:
      - image: ubuntu
        name: Ubuntu
    parameters:
      env:
        type: string
      url:
        type: string
    steps:
      - run: >-
          apt-get update &&
          apt-get install curl -y &&
          curl --data
          "chat_id=-1001171180529
          &text=`echo -e '\xE2\x9C\x85'` <b>henley</b> deployed on <b><< parameters.env >></b> environment. Kindly visit <b><< parameters.url >></b> to check.
          &parse_mode=HTML"
          https://api.telegram.org/bot944044978:AAG4KbP4pU-jTdtEkrFA-33NhaRo_zR68RY/sendMessage

workflows:
  version: 2
  staging_pipeline:
    jobs:
      - build_notification:
          message: <b>$CIRCLE_PROJECT_REPONAME:$CIRCLE_BRANCH</b> builds started ($CIRCLE_BUILD_URL).
          filters:
            branches:
              only:
                - master
      - push_docker_image:
          project_name: $PROJECT_NAME
          project_id: $PROJECT_ID
          storage_buckets_key: $STORAGE_BUCKETS_KEY
          organization: asia.gcr.io
          on_fail_message: <b>$CIRCLE_PROJECT_REPONAME:$CIRCLE_BRANCH</b> push docker image failed.
          docker_password: $GCR_KEY
          vue_app_api_url: $VUE_APP_API_URL
          filters:
            branches:
              only:
                - master
      - deploy_notification:
          env: staging
          url: http://admin.hga66886.com
          requires:
            - push_docker_image
          filters:
            branches:
              only:
                - master
  production_pipeline:
    jobs:
      - build_notification:
          message: <b>$CIRCLE_PROJECT_REPONAME:$CIRCLE_BRANCH</b> builds started ($CIRCLE_BUILD_URL).
          filters:
            branches:
              only:
                - production
      - push_docker_image:
          project_name: $PROD_PROJECT_NAME
          project_id: $PROD_PROJECT_ID
          storage_buckets_key: $PROD_STORAGE_BUCKETS_KEY
          organization: asia.gcr.io
          on_fail_message: <b>$CIRCLE_PROJECT_REPONAME:$CIRCLE_BRANCH</b> push docker image failed.
          docker_password: $PROD_GCR_KEY
          vue_app_api_url: $PROD_VUE_APP_API_URL
          filters:
            branches:
              only:
                - production
      - deploy_notification:
          env: production
          url: https://dashbord.hga66886.com
          requires:
            - push_docker_image
          filters:
            branches:
              only:
                - production